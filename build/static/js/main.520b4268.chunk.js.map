{"version":3,"sources":["navbars/navOne.js","constants/routes.js","navbars/navTwo.js","login/login.js","registration/registration.js","home/home.js","about/about.js","snacks/bear.js","snacks/drop.js","snacks/entry.js","snacks/munch.js","profile/calendar.js","profile/entryModal.js","profile/profileModal.js","profile/profilePage.js","App.js","serviceWorker.js","index.js"],"names":["NavBarOne","props","react_default","a","createElement","className","react_router_dom","to","activeClassName","onClick","clearMessage","NavBarTwo","logout","Login","state","email","password","handleChange","e","_this","setState","Object","defineProperty","target","name","value","handleSubmit","preventDefault","login","_this$state","this","_this$props","logged","message","react_router","onSubmit","type","onChange","Component","Registration","firstName","lastName","level","register","Home","registered","console","log","getBear","getDrop","getMunchie","About","Bear","bear","quote","author","react_spinners","loading","Drop","drop","JournalEntry","date","title","munchie","prompt","entry","saveEntry","saveNewEntry","cancelNewEntry","Munchie","newEntry","paperForEntry","Date","toDateString","_callee","info","entryResponse","parsedResponse","regenerator_default","wrap","_context","prev","next","fetch","method","credentials","body","JSON","stringify","headers","Content-Type","sent","json","updateUser","user","t0","stop","snacks_entry","PersonalCalendar","entry_default","EntryModal","_ref","closeEntry","deleteEntry","show","children","showHideClassName","ProfileModal","closeProfile","deleteProfile","editProfile","userInfo","ProfilePage","showEntryModal","showProfileModal","amtOfEntries","currentUser","journal","length","key","viewProfile","viewEntry","data","parsedData","concat","_id","_this2","profile_calendar","calendar","map","i","profileModal","deleteUser","editUser","entryModal","App","bearCategory","dropCategory","registeredUser","_callee2","loginResponse","_context2","_callee3","logoutResponse","_context3","_callee4","category","_context4","Math","floor","random","contents","_callee5","_context5","_callee6","_context6","_callee7","_context7","_callee8","_context8","navTwo","getUser","navOne","exact","path","render","login_login","registration","home_home","resetLoader","about_about","profilePage","snacks_bear","snacks_drop","snacks_munch","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","unregister"],"mappings":"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","file":"static/js/main.520b4268.chunk.js","sourcesContent":["import React from 'react';\nimport {NavLink} from 'react-router-dom';\n\nimport * as routes from '../constants/routes';\n\nconst NavBarOne = (props)=>\n    <div className=\"navbar nav-one\">\n        <p className='logo'>mind | full</p>\n        <div className='navbar-links'>\n            <NavLink to={routes.ABOUT} className='navbar-link' activeClassName='active' onClick={props.clearMessage}>about</NavLink>\n            <NavLink to={routes.LOGIN} className='navbar-link' activeClassName='active' onClick={props.clearMessage}>login</NavLink>\n            <NavLink to={routes.REGISTER} className='navbar-link' activeClassName='active'>sign up</NavLink>\n        </div>\n    </div>\n\nexport default NavBarOne;","export const LOGIN =\"/\";\nexport const REGISTER =\"/register\";\nexport const ABOUT = '/about';\nexport const HOME = '/home';\nexport const PROFILE = '/profile';\nexport const LOGOUT = '/';\nexport const BEAR = '/gummy';\nexport const DROP = '/cough';\nexport const MUNCH = '/munch';\nexport const CONTACT = 'contact';","import React from 'react';\nimport {NavLink} from 'react-router-dom';\n\nimport * as routes from '../constants/routes';\n\nconst NavBarTwo = (props) =>\n    <div className='navbar nav-two'>\n        <p className='logo'>mind | full</p>\n        <div className='navTwo-links'>\n            <NavLink to={routes.ABOUT} className='navbar-link' activeClassName='active'>about</NavLink>\n            <NavLink to={routes.HOME} className='navbar-link' activeClassName='active'>home</NavLink>\n            <NavLink to={routes.PROFILE} className='navbar-link' activeClassName='active'>journal</NavLink>\n            <NavLink to={routes.LOGOUT} className='navbar-link' onClick={props.logout}>logout</NavLink>\n        </div>\n    </div>\n\nexport default NavBarTwo;","import React, {Component} from 'react';\nimport {Redirect} from 'react-router-dom';\nimport './login.css'\n\nclass Login extends Component {\n    state = {\n        email: '',\n        password: ''\n    }\n    handleChange = (e)=>{\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n    handleSubmit = (e)=>{\n        e.preventDefault();\n        this.props.login(this.state)\n        this.setState({\n            password: this.props.password,\n        })\n    }\n    render(){\n        const {email, password} = this.state;\n        const {logged, message} = this.props;\n        return(\n            logged\n            ? <Redirect to='/home'/>\n            : <div className='under-nav login'>\n                <h2 className='welcome'>WELCOME</h2>\n                        <p className='message'>{message}</p>\n                <div className=\"login-box\">\n                    <form onSubmit={this.handleSubmit}>\n                        email: <input type='text' name='email' value={email} onChange={this.handleChange} /><br/>\n                        password: <input type='password' name='password' value={password} onChange={this.handleChange} /><br/>\n                        <button type='submit'>login</button>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Login;","import React, {Component} from 'react';\nimport {Redirect} from 'react-router-dom';\n// import { async } from 'q';\n\nclass Registration extends Component {\n    state = {\n        firstName: '',\n        lastName: '',\n        email: '',\n        password: '',\n        level: 'exploring meditator'\n    }\n    handleChange = (e)=>{\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n    handleSubmit = (e)=>{\n        e.preventDefault();\n        this.props.register(this.state)\n    }\n    render(){\n        const {logged, message} = this.props\n        return(\n            logged\n            ? <Redirect to='/home'/>\n            : <div className=\"under-nav register\">  \n                <p className='message'>{message}</p>\n                <div className=\"registration-box\">\n                    <h4>create an account</h4>\n                    <form onSubmit={this.handleSubmit}>\n                        first name*: <input type='text' name='firstName' onChange={this.handleChange} /><br/>\n                        last name (optional): <input type='text' name='lastName' onChange={this.handleChange} /><br/>\n                        email*: <input type='text' name='email' onChange={this.handleChange} /><br/>\n                        password: <input type='password' name='password' onChange={this.handleChange} /><br/>\n                        <button type='submit'>Create!</button>\n                    </form>\n                    <p>* required</p>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Registration;","import React from 'react';\nimport {Redirect, NavLink} from 'react-router-dom';\nimport './home.css'\n\nimport * as routes from '../constants/routes';\n// import { async } from 'q';\n\nconst Home = (props)=>{\n    const {registered, logged, name} = props\n    console.log(registered)\n    console.log(logged)\n    return(\n        logged\n        ? <div className='under-nav'>\n            <div className=\"greeting\">\n                <h2 className='welcome'>WELCOME</h2>\n                {registered\n                ? <h4>{name}</h4>\n                : props.logged\n                && <h4>back {name}</h4>\n                }\n            </div>  \n        <h6>what would you like?</h6>\n        <div className='home-links'>\n            <NavLink to={routes.BEAR} onClick={props.getBear}>a gummy bear</NavLink>\n            <NavLink to={routes.DROP} onClick={props.getDrop}>a cough drop</NavLink>\n            <NavLink to={routes.MUNCH} onClick={props.getMunchie}>something to munch on ...</NavLink>\n        </div>\n    </div>\n    : <Redirect to='/' />\n    )\n}\n\nexport default Home;","import React from 'react';\nimport './about.css'\n\nconst About = (props)=>{\n    return(\n        <div className=\"under-nav about\">\n            <div className=\"greeting\">\n                <h2 className='welcome'>WELCOME</h2>\n                <h4>to mind | full</h4>\n            </div>\n            <h6 className='about-string'>mindfulness . awareness . <span>meditation</span> . relaxation . stress relief</h6>\n            <div className='about-para'>\n                <p>If you visited with any of these in mind or for a mental break, maybe we can help. :)<br/><br/>\n                mind | full hopes to provide a space for personal meditation. We want our visitors to take care of their mental health in the method they see fit. As you may know meditation takes many forms, at mind | full we do it in the form of snacks: gummy bears, cough drops, and some munchies.<br/><br/>\n                Let us explain… the first two are simply sending good vibes depending on what you need in the moment. This usually includes music, a serene backdrop, and a quote to ponder about. Gummy bears are for when you are looking for some inspiration, and cough drops are for those days you need a little mood booster.\n                (I know, I’m sorry there aren’t any real snacks)<br/><br/>\n                The third option, “something to munch on”, is an exercise where we send you a prompt with the option to discuss internally or to write a journal entry. When you create an account you will have a calendar to track your progress and your very own journal to hold your entries.<br/><br/>\n                Using one of these three methods, we encourage you to take a mental break each day. you are doing everything to live your best life and we would like to support you as best as we can. We hope mind | full serves purpose in your journey, so please visit often!</p>\n            </div>\n        </div>\n    )\n}\n\nexport default About;\n\n\n","import React from 'react';\nimport {Redirect} from 'react-router-dom';\nimport './quote.css'\nimport {RingLoader} from 'react-spinners';\n\nconst Bear = (props)=>{\n    return(\n        props.logged\n        ? \n        <div className=\"quote\">\n            <h5>gummy bear</h5>\n            <div className='quote-container'>\n                <h6>\"{props.bear.quote}\"</h6>\n                <p>-{props.bear.author}</p>\n            </div>\n            <RingLoader loading={props.loading} />\n        </div>\n        : <Redirect to='/' />\n    )\n} \n\nexport default Bear;","import React from 'react';\nimport {Redirect} from 'react-router-dom';\nimport './quote.css'\nimport {RingLoader} from 'react-spinners';\nconst Drop = (props)=>{\n    return(\n        props.logged\n        ? <div className='quote'>\n            <h5>cough drop</h5>\n            <div className='quote-container'>\n                <h6>\"{props.drop.quote}\"</h6>\n                <p>-{props.drop.author}</p>\n            </div>\n            <RingLoader loading={props.loading} />\n        </div>\n        : <Redirect to=\"/\" />\n    )\n} \n\nexport default Drop;","import React, {Component} from 'react';\n\n// import CancelEntry from '../precautions/cancelEntry'\n\nclass JournalEntry extends Component {\n    state = {\n        date: this.props.date,\n        title: this.props.munchie.title,\n        quote: this.props.munchie.quote,\n        author: this.props.munchie.author,\n        prompt: this.props.munchie.prompt,\n        entry: ''\n    }\n    handleChange = (e)=>{\n        console.log(e.target.value)\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n    saveEntry = ()=>{\n        console.log('saved!')\n        this.props.saveNewEntry(this.state)\n        this.setState({\n            entry: ''\n        })\n    }\n    render(){\n        const {entry} = this.state;\n        return(\n            <div className=\"paper\">\n                <p className='date'>{this.props.date}</p>\n                    <input className='entry-input' type=\"text\" name=\"entry\" value={entry} onChange={this.handleChange} />\n                    <button onClick={this.props.cancelNewEntry}>cancel</button>\n                    <button onClick={this.saveEntry}>save entry</button>\n            </div>\n        )\n    }\n}\n\nexport default JournalEntry;","import React, {Component} from 'react';\nimport {Redirect} from 'react-router-dom';\nimport './munch.css'\nimport JournalEntry from './entry';\n// import { async } from 'q';\n\nclass Munchie extends Component {\n    state = {\n        date: '',\n        newEntry: false,\n        message: ''\n    }\n    paperForEntry = ()=>{\n        console.log('paper!')\n        this.setState({\n            newEntry: true,\n            date: new Date().toDateString()\n        })\n    }\n    saveNewEntry = async (info)=>{\n        try {\n            const entryResponse = await fetch('/user/entry', {\n                method: \"POST\",\n                credentials: 'include',\n                body: JSON.stringify(info),\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            })\n            const parsedResponse = await entryResponse.json();\n            console.log(parsedResponse);\n            this.props.updateUser(parsedResponse.user)\n            this.setState({\n                newEntry: false,\n                message: parsedResponse.message\n            })\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    cancelNewEntry = ()=>{\n        this.setState({\n            newEntry: false\n        })\n    }\n    render(){\n        const {date, newEntry, message} = this.state\n        const {munchie, logged} = this.props\n        return(\n            logged\n            ? <div className='munch-box'>\n                <h4 className=\"title\">{munchie.title}</h4>\n                <h6 className='munch-quote'>\"{munchie.quote}\"</h6>\n                <h6 className= 'author'>-{munchie.author}</h6>\n                <p className='munch-slogan'>something to munch on...</p><br/>\n                <div className='prompt-newEntry'>\n                <div className='prompt-box'><p className='prompt'>{munchie.prompt}</p></div>\n                {newEntry\n                ? <JournalEntry munchie={munchie} date={date} cancelNewEntry={this.cancelNewEntry} saveNewEntry={this.saveNewEntry} />\n                : <div> \n                    <p>{message}</p>\n                    <button className='entry-button' onClick={this.paperForEntry}>New journal entry</button> \n                </div>\n                }\n                </div>\n            </div>\n            : <Redirect to=\"/\" />\n        )\n    }\n}\n\nexport default Munchie;","import React, {Component} from 'react';\nimport Calendar from 'react-calendar';\nimport './calendar.css'\n\nclass PersonalCalendar extends Component {\n    state = {\n        date: new Date(),\n    }\n    handleChange = date => {\n        console.log(date)\n        this.setState({\n            date\n        })\n    }\n    render(){\n        const {date} = this.state\n        return(\n            <div>\n                <Calendar\n                onChange={this.handleChange}\n                date={date}\n                />\n            </div>\n        )\n    }\n}\n\nexport default PersonalCalendar;","import React from 'react';\nimport './modal.css';\n\nconst EntryModal = ({closeEntry, deleteEntry, show, children})=>{\n    const showHideClassName = show ? 'modal display-block' : 'modal display-none'\n    return(\n        <div className={showHideClassName}>\n            <section className='modal-main'>\n                {children}\n                <button onClick={closeEntry}>close</button>\n                <button onClick={deleteEntry}>delete</button>\n            </section>\n        </div>\n    )\n}\n\nexport default EntryModal;","import React from 'react';\nimport './modal.css';\n\nconst ProfileModal = ({closeProfile, deleteProfile, editProfile, userInfo, show, children})=>{\n    const showHideClassName = show ? 'modal display-block' : 'modal display-none'\n    return(\n        <div className={showHideClassName}>\n            <section className='modal-main'>\n                {children}\n                <button onClick={closeProfile}>close</button>\n                <button onClick={()=> editProfile(userInfo)}>save changes</button>\n                <button onClick={deleteProfile}>deactivate account</button>\n            </section>\n        </div>\n    )\n}\n\nexport default ProfileModal;","import React, {Component} from 'react';\nimport {Redirect} from 'react-router-dom';\nimport './profile.css'\n\nimport Calendar from './calendar'\nimport EntryModal from './entryModal';\nimport ProfileModal from './profileModal';\n// import { async } from 'q';\n\nclass ProfilePage extends Component {\n    state = {\n        showEntryModal: false,\n        showProfileModal: false,\n        amtOfEntries: this.props.currentUser.journal.length,\n        key: 0,\n        firstName: this.props.currentUser.firstName,\n        lastName: this.props.currentUser.lastName,\n        email: this.props.currentUser.email,\n        password: null\n    }\n    viewProfile = ()=>{\n        this.setState({\n            showProfileModal: true\n        })\n    }\n    closeProfile = ()=>{\n        this.setState({\n            showProfileModal: false\n        })\n    }\n    viewEntry = (info)=>{\n        console.log('view entry function')\n        this.setState({\n            showEntryModal: true,\n            key: info\n        })\n    } \n    closeEntry = ()=>{\n        this.setState({\n            showEntryModal: false\n        })\n    }\n    deleteEntry = async ()=>{\n        try {\n            const data = await fetch(`/entry/${this.props.currentUser.journal[this.state.key]._id}`, {\n                method: 'DELETE',\n                credentials: 'include',\n                body: JSON.stringify(this.state),\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            })\n            const parsedData = await data.json();\n            console.log(parsedData)\n            this.setState({\n                showEntryModal: false,\n                amtOfEntries: parsedData.user.journal.length\n            })\n            this.props.updateUser(parsedData.user);\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    handleChange = (e)=>{\n        console.log(e.target.value)\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n    render(){\n        const {amtOfEntries, firstName, lastName, email, password} = this.state\n        const {logged, currentUser} = this.props\n        return(\n            logged \n            ? <main>\n                <div className='profile-page'>\n                    <div className='user-info'>\n                        <h3 className='user-name'>{currentUser.firstName}</h3>\n                        <h5 className='level'>{currentUser.level}</h5>\n                        <button onClick={this.viewProfile}>edit profile</button>\n                    </div>\n                    <div className='cal-jour'>\n                    <div className='calendar'>\n                        <Calendar />\n                        <h4 className=\"check-in\">total check-ins: {currentUser.calendar.length}</h4>\n                    </div>\n                    <div className='journal'>\n                        <h4>contents</h4>\n                        {this.props.currentUser.journal.map((entry, i)=>{\n                            return <p key={entry._id} className='entries' onClick={()=>this.viewEntry(i)}>{entry.title} {entry.date}</p>\n                        })}\n                    </div>\n                    </div>\n                </div>\n                 <ProfileModal show={this.state.showProfileModal} closeProfile={this.closeProfile} deleteProfile={this.props.deleteUser} userInfo={this.state} editProfile={this.props.editUser}>\n                    <div className=\"profile-modal\">    \n                        first Name: <input type='text' name=\"firstName\" value={firstName} onChange={this.handleChange}/><br/>\n                        last Name: <input type='text' name=\"lastName\" value={lastName} onChange={this.handleChange}/><br/>\n                        email: <input type='text' name=\"email\" value={email} onChange={this.handleChange}/><br/>\n                        password: <input type='password' name=\"password\" value={password} onChange={this.handleChange}/>\n                        </div>\n                 </ProfileModal>\n                 <EntryModal show={this.state.showEntryModal} closeEntry={this.closeEntry} deleteEntry={this.deleteEntry}>\n                    <div className=\"entry-page\">\n                        <h6 className=\"modal-quote\">quote: {amtOfEntries > 0 ? currentUser.journal[this.state.key].quote : 'N/A'}</h6>\n                        <p>prompt: {amtOfEntries > 0 ? currentUser.journal[this.state.key].prompt : 'N/A'}</p>\n                        <p>date of entry: {amtOfEntries > 0 ? currentUser.journal[this.state.key].date : 'N/A'}</p>\n                        <p>{amtOfEntries > 0 ? currentUser.journal[this.state.key].entry : 'N/A'}</p>\n                    </div>\n                 </EntryModal> \n             </main>\n            : <Redirect to='/' />\n        )\n    }\n}\n\nexport default ProfilePage;","import React, {Component} from 'react';\nimport './App.css';\n\nimport * as routes from './constants/routes';\nimport{Switch, Route} from 'react-router-dom';\n\n//NavBar:\nimport NavOne from './navbars/navOne';\nimport NavTwo from './navbars/navTwo';\n\n//Components:\nimport Login from './login/login';\nimport Registration from './registration/registration';\nimport Home from './home/home';\nimport About from './about/about';\nimport Bear from './snacks/bear';\nimport Drop from './snacks/drop';\nimport Munchie from './snacks/munch';\nimport ProfilePage from './profile/profilePage';\nimport { async } from 'q';\n// import { async } from 'q';\n\nclass App extends Component {\n  state = {\n    registered: false,\n    logged: false,\n    password: '',\n    message: '',\n    name: '',\n    bear: '',\n    bearCategory: ['inspire', 'inspirational', 'kindness', 'inspiration', 'determined', 'grit', \"inspirational-attitude\", \"inspirational-happiness\"],\n    drop: '',\n    dropCategory: ['motivational', 'positive', 'hopeful', 'optimism', 'happiness', 'compassion', 'perseverance'],\n    munchie: '',\n    currentUser: '',\n    loading: true\n  }\n  register = async (info)=>{\n    try {\n      const registeredUser = await fetch('/auth/register', {\n          method: \"POST\",\n          credentials: 'include',\n          body: JSON.stringify(info),\n          headers: {\n              'Content-Type': 'application/json'\n          }\n      })\n      const parsedResponse = await registeredUser.json();\n      console.log(parsedResponse)\n      if(parsedResponse.data === 'user created'){\n        this.setState({\n          registered: true,\n          logged: true,\n          name: parsedResponse.user.firstName,\n          currentUser: parsedResponse.user\n        })\n      } else {\n        this.setState({\n          message: parsedResponse.message  \n        })\n      }\n  } catch (error) {\n      console.log(error)\n  } \n  }\n  login = async (info)=>{\n    try {\n      const loginResponse = await fetch('/auth/login', {\n          method:\"POST\",\n          credentials: 'include',\n          body: JSON.stringify(info),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n      })\n      const parsedResponse = await loginResponse.json()\n      console.log(parsedResponse)\n      if(parsedResponse.data === 'login successful'){\n          console.log(parsedResponse.data)\n          this.setState({\n            logged: true,\n            name: parsedResponse.user.firstName,\n            currentUser: parsedResponse.user\n          })\n      } else {\n          console.log(parsedResponse.data)\n          this.setState({\n              password: '',\n              message: parsedResponse.message\n          })\n      }\n  } catch (error) {\n      console.log(error)\n  }\n  }\n  logout = async () => {\n    try {\n      const logoutResponse = await fetch('/auth/logout', {\n        method: 'POST',\n        credentials:'include',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      })\n      const parsedResponse = await logoutResponse.json();\n      console.log(parsedResponse)\n      this.setState({\n        logged: false,\n        message: parsedResponse.message\n      })\n    } catch (error) {\n      console.log(error)\n    }\n  }\n  clearMessage = ()=>{\n    this.setState({\n      message: ''\n    })\n  }\n  getBear = async ()=>{\n    const i = Math.floor(Math.random() * 8)\n    const category = this.state.bearCategory[i]\n    console.log(category)\n    try {\n      const data = await fetch(`/user/${category}`, {\n        credentials: 'include'\n      });\n      const parsedData = await data.json();\n      console.log(parsedData)\n      this.setState({\n        bear: parsedData.data.contents,\n        loading: false\n      })\n      \n    } catch (error) {\n      console.log(error)\n    } \n  }\n  getDrop = async ()=>{\n    const i = Math.floor(Math.random() * 7)\n    const category = this.state.dropCategory[i]\n    console.log(category)\n    try {\n      const data = await fetch(`/user/${category}`, {\n        credentials: 'include'\n      });\n      const parsedData = await data.json();\n      console.log(parsedData)\n      this.setState({\n        drop: parsedData.data.contents,\n        loading: false\n      })\n    } catch (error) {\n      console.log(error)\n    }\n  }\n  getMunchie = async ()=>{\n    try {\n      const data = await fetch('/user/random', {\n        credentials: 'include'\n      });\n      const parsedData = await data.json();\n      console.log(parsedData)\n      this.setState({\n        munchie: parsedData.data,\n        loading: false\n      })\n    } catch (error) {\n      console.log(error)\n    }\n  }\n  updateUser = (info)=>{\n    console.log('updated user')\n    this.setState({\n      currentUser: (info)\n    })\n  }\n  deleteUser = async()=>{\n    try {\n      const data = await fetch('/user/deactivate', {\n        method: 'DELETE',\n        credentials: 'include',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      })\n      const parsedData = await data.json();\n      this.setState({\n        logged: false,\n        message: parsedData.message\n      })\n\n    } catch (error) {\n      console.log(error)\n    }\n  }\n  editUser = async(info)=>{\n    try {\n      const data = await fetch('/user/edit', {\n        method: 'PUT',\n        credentials: 'include',\n        body: JSON.stringify(info),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      })\n      const parsedData = await data.json();\n      console.log(parsedData)\n    } catch (error) {\n      console.log(error)\n    }\n  }\n  render(){\n    const {registered, logged, password, message, name, bear, drop, munchie, currentUser, loading} = this.state\n    return (\n      <div className=\"App\">\n        <div className=\"container\">\n          {logged\n          ? <NavTwo logout={this.logout} getUser={this.getUser} />\n          : <NavOne clearMessage={this.clearMessage} />\n          }\n          <Switch>\n            <Route exact path={routes.LOGIN} render={() => <Login logged={logged} password={password} message={message} login={this.login} />} />\n            <Route exact path={routes.REGISTER} render={()=> <Registration logged={logged} message={message} register={this.register} />} />\n            <Route exact path={routes.HOME} render={()=> <Home resetLoader={this.resetLoader} getBear={this.getBear} getDrop={this.getDrop} getMunchie={this.getMunchie} logged={logged} registered={registered} name={name} />} />\n            <Route exact path={routes.ABOUT} render={()=> <About />} />\n            <Route exact path={routes.PROFILE} render={()=> <ProfilePage logged={logged} deleteUser={this.deleteUser} currentUser={currentUser} editUser={this.editUser} updateUser={this.updateUser} />} />\n            <Route exact path={routes.BEAR} render={()=> <Bear bear={bear} logged={logged} loading={loading} />} />\n            <Route exact path={routes.DROP} render={()=> <Drop drop={drop} logged={logged} />} />\n            <Route exact path={routes.MUNCH} render={()=> <Munchie munchie={munchie} logged={logged} updateUser={this.updateUser} />} />\n          </Switch>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}